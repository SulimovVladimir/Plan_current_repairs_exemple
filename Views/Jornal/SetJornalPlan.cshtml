@model List<Plan_current_repairs.Data.VIewModels.RecordsByJornal>

@{
    ViewBag.Title = "Заполнение плана";
    Layout = "_Layout";
}


@await Component.InvokeAsync("Menu", new { Section = ViewBag.Menu[0], Block = ViewBag.Menu[1], Group = ViewBag.Menu[2], Year = ViewBag.Menu[3], Department = ViewBag.Menu[4] })

@{ IEnumerable<IGrouping<string, Plan_current_repairs.Data.VIewModels.RecordsByJornal>> GroupjornalByPlan = Model.GroupBy(x => x.nameOfWorks.NameOfWork);
}


@{ string ShowSpecification(string discription = null, string periodicity = null, string unit = null)
    {
        string temp = $"Описание: {discription} \n\nПереодичность: {periodicity}\n\nЕдиница измерения: {unit}";
        return temp;
    }
}

@{ string ShowValuesBySection (float [] array)
    {
        if (array == null) array = new float []{0,0,0,0,0,0,0,0,0,0,0,0};
        string temp = null;
        if (array.Length == 4) temp = $"1-й квартал: {array[0]}\n2-й квартал: {array[1]}\n3-й квартал: {array[2]}\n4-й квартал: {array[3]}";
        else temp = $"1-й квартал: {array.Take(3).Sum()}\n2-й квартал: {array.Skip(3).Take(3).Sum()}\n3-й квартал: {array.Skip(6).Take(3).Sum()}\n4-й квартал: {array.Skip(9).Take(3).Sum()}";
        return temp;
    }
}

@{
    byte a = 0, b = 0;

    switch (ViewBag.Month[0])
    {
        case "1-й квартал": a = 0; b = 3; break;
        case "2-й квартал": a = 3; b = 6; break;
        case "3-й квартал": a = 6; b = 9; break;
        case "4-й квартал": a = 9; b = 12; break;
    }
}

<form id="My" style="margin-left: 10px; margin-right: 10px" method="post" asp-controller="Jornal" asp-action="SetJornalPlan">

    <table class="table table-hover table-striped table-sm mx-auto" style="margin-left: 10px; margin-right: 10px">
        <thead class="bg-light sticky-top" align="center">
            @*Шапка 1 строка*@
            <tr>
                <th class="w-25" valign="middle" rowspan="2" title="@ShowSpecification()">Наименование работ</th>
                <th>Год</th>
                <th>Январь</th>
                <th>Февраль</th>
                <th>Март</th>
                <th>Апрель</th>
                <th>Май</th>
                <th>Июнь</th>
                <th>Июль</th>
                <th>Август</th>
                <th>Сентябрь</th>
                <th>Октябрь</th>
                <th>Ноябрь</th>
                <th>Декабрь</th>
                <th class="width_15" valign="middle">Примечание</th>
            </tr>
        </thead>


        @*Вывод значений*@
        @for (int i = 0; i < GroupjornalByPlan.ToList().Count; i++)
        {

            //Вывод наименований работ с участками
            if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.TypeRecords == "с участками")
            {
                //суммирующая строка, участки не добавлены
                if (GroupjornalByPlan.ToList()[i].ToList()[0].PlanArray == null)
                {
                    int el = 0;
                    for (int g = 0; g < Model.ToList().Count; g++)
                    {
                        if (Model.ToList()[g].nameOfWorks.WorkID == GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID)
                        {
                            el = g;
                            break;
                        }
                    }
                    <tr align="center" class="fw-bold">
                        <td align="left" title="@ShowSpecification(GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Discription,
                                               GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Periodicity,
                                               GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Unit)">
                            @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.NameOfWork

                            <input type="submit" value="" style="width:25px; background-image: url('../img/plus-circle-fill.svg'); background-repeat: no-repeat;" title="Добавить участок"
                                   class="float-end border-0 bg-transparent" asp-controller="Jornal" asp-action="AddRecordToJornal" asp-route-Department="@ViewBag.Menu[4]" asp-route-Year="@ViewBag.Menu[3]"
                                   asp-route-WorkID="@GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID" asp-route-IsPlan="true" />

                        </td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td><input type="hidden" asp-for="@Model.ToList()[el].nameOfWorks.WorkID" /></td>
                    </tr>
                }

                //суммирующая строка, участки добавлены
                else
                {
                    <tr align="center" class="fw-bold">
                        <td align="left" title="@ShowSpecification(GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Discription,
                                               GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Periodicity,
                                               GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Unit)">
                                               @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.NameOfWork
                            <input type="submit" value="" style="width:25px; background-image: url('../img/plus-circle-fill.svg'); background-repeat: no-repeat;" title="Добавить участок"
                                   class="float-end border-0 bg-transparent" asp-controller="Jornal" asp-action="AddRecordToJornal" asp-route-Department="@ViewBag.Menu[4]" asp-route-Year="@ViewBag.Menu[3]"
                                   asp-route-WorkID="@GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID" asp-route-IsPlan="true" />
                        </td>

                        @{ float[] array = { GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(3).Take(3).Sum()),
                               GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(6).Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(9).Take(3).Sum())};
                        }

                        <td title="@ShowValuesBySection(array)">
                            @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Sum()),3)
                        </td>

                        @for (int n = 0; n < 12; n++)
                        {
                            <td>
                                @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray[n]),3)</td>
                        }
                        <td></td>
                    </tr>
                }

                //вывод каждого участка отдельной строкой
                if (GroupjornalByPlan.ToList()[i].ToList()[0].jornal != null)
                {

                    for (int y = 0; y < GroupjornalByPlan.ToList()[i].ToList().Count; y++)
                    {

                        int el = 0;
                        for (int g = 0; g < Model.ToList().Count; g++)
                        {
                            if (Model.ToList()[g].jornal != null)
                            {
                                if (GroupjornalByPlan.ToList()[i].ToList()[y].jornal.NumberRecordingID == Model.ToList()[g].jornal.NumberRecordingID)
                                {
                                    el = g;
                                    break;
                                }
                            }

                        }
                        {

                            <tr align="center">
                                <td>
                                    <div class="input-group">
                                        <input class="sector autoGrow table_value float-end form-control" style="text-align:right" list="dictionarySector" onchange="addToDictionary(this)" asp-for="@Model.ToList()[el].jornal.Sector" />
                                        <a class="input-group-text d-none ps-0 bg-success" style="width:20px; height:30px" title="Добавить участок в словарь"
                                           onclick="return ShowWindowConfirm('Внимание, несохраненные данные будут удалены. Продолжить?')"><img src="~/img/info.svg" /></a>
                                        <input type="button" title="Удалить участок" value="" style="width:35px; height:30px; background-image: url('../img/x-circle-fill.svg'); background-repeat: no-repeat; background-position:center"
                                           class="input-group-text float-end" data-bs-toggle="modal" data-bs-target="#ModalDelete"
                                           data-bs-ID="@Model.ToList()[el].jornal.NumberRecordingID" data-bs-Sector="@Model.ToList()[el].jornal.Sector" />
                                    </div>
                                </td>
                                <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray)">@Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray.Sum(),3)</td>

                                @for (int n = 0; n < 12; n++)
                                {
                                    <td align="center" class="table_value"><input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanArray[n]" /></td>
                                }


                                <td align="center" class="table_value">
                                    <textarea class="autoGrow w-100" style="text-align:center" oninput="auto_grow(this)" asp-for="@Model.ToList()[el].jornal.Note">@Model.ToList()[el].jornal.Note</textarea>
                                    <input type="hidden" asp-for="@Model.ToList()[el].jornal.NumberRecordingID" />
                                    <input type="hidden" asp-for="@Model.ToList()[el].nameOfWorks.IntegerValue" />
                                </td>
                            </tr>

                        }
                    }
                }
                continue;
            }

            //Вывод наименований работ с участками и параметрами
            if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.TypeRecords == "с участками и параметрами")
            {

                //суммирующая строка, без добавленных участков
                if (GroupjornalByPlan.ToList()[i].ToList()[0].PlanArray == null)
                {
                    int el = 0;
                    for (int g = 0; g < Model.ToList().Count; g++)
                    {
                        if (Model.ToList()[g].nameOfWorks.WorkID == GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID)
                        {
                            el = g;
                            break;
                        }
                    }

                    <tr align="center" class="fw-bold">
                        <td align="left" title="@ShowSpecification(GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Discription,
                                                                              GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Periodicity,
                                                                              GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Unit)">
                            @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.NameOfWork
                            <input type="submit" value="" style="width:25px; background-image: url('../img/plus-circle-fill.svg'); background-repeat: no-repeat;" title="Добавить участок"
                                   class="float-end border-0 bg-transparent" asp-controller="Jornal" asp-action="AddRecordToJornal" asp-route-Department="@ViewBag.Menu[4]" asp-route-Year="@ViewBag.Menu[3]"
                                   asp-route-WorkID="@GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID" asp-route-IsPlan="true" />
                        </td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td><input type="hidden" asp-for="@Model.ToList()[el].nameOfWorks.WorkID" /></td>
                    </tr>
                }
                //суммирующая строка, с добавленными участками
                else
                {
                    <tr align="center" class="fw-bold">
                        <td align="left" title="@ShowSpecification(GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Discription,
                                                                              GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Periodicity,
                                                                              GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Unit)">
                            @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.NameOfWork
                            <input type="submit" value="" style="width:25px; background-image: url('../img/plus-circle-fill.svg'); background-repeat: no-repeat;" title="Добавить участок"
                                   class="float-end border-0 bg-transparent" asp-controller="Jornal" asp-action="AddRecordToJornal" asp-route-Department="@ViewBag.Menu[4]" asp-route-Year="@ViewBag.Menu[3]"
                                   asp-route-WorkID="@GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.WorkID" asp-route-IsPlan="true" />
                        </td>

                        @{ float[] array = { GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(3).Take(3).Sum()),
                               GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(6).Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Skip(9).Take(3).Sum())};
                        }
                        <td title="@ShowValuesBySection(array)">
                            @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray.Sum()),3)</td>

                        @for (int n = 0; n < 12; n++)
                        {
                            <td>@Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanArray[n]),3)</td>
                        }
                        <td></td>
                    </tr>

                    //суммирующая строка для 1 параметра
                    if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_1 != null)
                    {
                        <tr align="center" class="fw-bold">
                            <td title="Описание"><div class="float-lg-end mx-3 pe-4"> @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_1</div></td>

                            @{ float[] array1 = { GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1.Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1.Skip(3).Take(3).Sum()),
                                                   GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1.Skip(6).Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1.Skip(9).Take(3).Sum())};
                            }
                            <td title="@ShowValuesBySection(array1)">
                                @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1.Sum()),3)</td>

                            @for (int n = 0; n < 12; n++)
                            {
                                <td>
                                    @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_1[n]),3)</td>
                            }
                            <td></td>
                        </tr>
                    }

                    //суммирующая строка для 2 параметра
                    if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_2 != null)
                    {
                        <tr align="center"class="fw-bold">
                            <td title="Описание">
                                <div class="float-lg-end mx-3 pe-4"> @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_2</div>
                            </td>

                            @{ float[] array2 = { GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2.Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2.Skip(3).Take(3).Sum()),
                                                   GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2.Skip(6).Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2.Skip(9).Take(3).Sum())};
                            }
                            <td title="@ShowValuesBySection(array2)">
                                @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2.Sum()),3)</td>

                            @for (int n = 0; n < 12; n++)
                            {
                                <td>
                                    @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_2[n]),3)</td>
                            }
                            <td></td>
                        </tr>
                    }
                    //суммирующая строка для 3 параметра
                    if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_3 != null)
                    {
                        <tr align="center class="fw-bold"">
                            <td title="Описание">
                                <div class="float-lg-end mx-3 pe-4"> @GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_3</div>
                            </td>

                            @{ float[] array3 = { GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3.Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3.Skip(3).Take(3).Sum()),
                                                   GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3.Skip(6).Take(3).Sum()), GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3.Skip(9).Take(3).Sum())};
                            }
                            <td title="@ShowValuesBySection(array3)">
                                @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3.Sum()),3)</td>

                            @for (int n = a; n < 12; n++)
                            {
                                <td>
                                    @Math.Round(GroupjornalByPlan.ToList()[i].Sum(x => x.PlanParameters_3[n]),3)</td>


                            }
                            <td></td>
                        </tr>
                    }

                    //вывод участков отдельной строкой
                    if (GroupjornalByPlan.ToList()[i].ToList()[0].jornal != null)
                    {
                        for (int y = 0; y < GroupjornalByPlan.ToList()[i].ToList().Count; y++)
                        {

                            int el = 0;
                            for (int g = 0; g < Model.ToList().Count; g++)
                            {
                                if (Model.ToList()[g].jornal != null)
                                {
                                    if (Model.ToList()[g].jornal != null)
                                    {
                                        if (GroupjornalByPlan.ToList()[i].ToList()[y].jornal.NumberRecordingID == Model.ToList()[g].jornal.NumberRecordingID)
                                        {
                                            el = g;
                                            break;
                                        }
                                    }

                                }

                            }
                            {
                                <tr align="center">
                                    <td >
                                        <div class="input-group">
                                        <input class="sector table_value float-end form-control" style="text-align:right" list="dictionarySector" onchange="addToDictionary(this)" asp-for="@Model.ToList()[el].jornal.Sector" />
                                            <a class="input-group-text d-none ps-0 bg-success" style="width:20px; height:30px" title="Добавить участок в словарь"
                                               onclick="return ShowWindowConfirm('Внимание, несохраненные данные будут удалены. Продолжить?')"><img src="~/img/info.svg" /></a>
                                            <input type="button" title="Удалить участок" value="" style="width:35px; height:30px; background-image: url('../img/x-circle-fill.svg'); background-repeat: no-repeat; background-position:center"
                                               class="input-group-text float-end" data-bs-toggle="modal" data-bs-target="#ModalDelete"
                                               data-bs-ID="@Model.ToList()[el].jornal.NumberRecordingID" data-bs-Sector="@Model.ToList()[el].jornal.Sector" />
                                        </div>
                                    </td>
                                    <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray)">
                                        @Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray.Sum(),3)</td>

                                    @for (int n = 0; n < 12; n++)
                                    {


                                        <td class="table_value" align="center">
                                            <input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanArray[n]" />
                                        </td>
                                    }



                                    <td class="table_value" align="center">
                                        <textarea class="autoGrow w-100" style="text-align:center" oninput="auto_grow(this)" asp-for="@Model.ToList()[el].jornal.Note">@Model.ToList()[el].jornal.Note</textarea>
                                        <input type="hidden" asp-for="@Model.ToList()[el].jornal.NumberRecordingID" />
                                        <input type="hidden" asp-for="@Model.ToList()[el].nameOfWorks.IntegerValue" />
                                    </td>
                                </tr>
                            }

                            //вывод 1 параметра для каждого участка
                            if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_1 != null)
                            {
                                {
                                    <tr align="center">
                                        <td><div class="float-lg-end mx-3 pe-4">@Model.ToList()[el].nameOfWorks.Parameter_1</div></td>
                                        <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_1)">
                                            @Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_1.Sum(),3)</td>

                                        @for (int n = 0; n < 12; n++)
                                        {


                                            <td align="center" class="table_value"><input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanParameters_1[n]" /></td>
                                        }


                                        <td align="center"></td>
                                    </tr>
                                }
                            }

                            //вывод 2 параметра для каждого участка
                            if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_2 != null)
                            {
                                {
                                    <tr align="center">
                                        <td><div class="float-lg-end mx-3 pe-4">@Model.ToList()[el].nameOfWorks.Parameter_2</div></td>
                                        <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_2)">
                                            @Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_2.Sum(),3)</td>

                                        @for (int n = 0; n < 12; n++)
                                        {


                                            <td align="center" class="table_value"><input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanParameters_2[n]" /></td>
                                        }


                                        <td align="center"></td>
                                    </tr>
                                }
                            }

                            //вывод 3 параметра для каждого участка
                            if (GroupjornalByPlan.ToList()[i].ToList()[0].nameOfWorks.Parameter_3 != null)
                            {
                                {
                                    <tr align="center">
                                        <td><div class="float-lg-end mx-3 pe-4">@Model.ToList()[el].nameOfWorks.Parameter_3</div></td>
                                        <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_3)">
                                            @Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanParameters_3.Sum(),3)</td>

                                        @for (int n = 0; n < 12; n++)
                                        {
                                            <td align="center" class="table_value"><input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanParameters_3[n]" /></td>
                                        }


                                        <td align="center"></td>
                                    </tr>
                                }
                            }
                        }
                    }

                }

                continue;
            }

            //Вывод наименований работ без участков
            for (int y = 0; y < GroupjornalByPlan.ToList()[i].ToList().Count; y++)
            {

                int el = 0;
                for (int g = 0; g < Model.ToList().Count; g++)
                {
                    if (Model.ToList()[g].jornal != null)
                        if (GroupjornalByPlan.ToList()[i].ToList()[y].jornal.NumberRecordingID == Model.ToList()[g].jornal.NumberRecordingID)
                        {
                            el = g;
                            break;
                        }
                }

                if (GroupjornalByPlan.ToList()[i].ToList()[y].nameOfWorks.TypeRecords == "без участков")
                {
                    <tr align="center" class="fw-bold">
                        <td align="left"
                            title="@ShowSpecification(@GroupjornalByPlan.ToList()[i].ToList()[y].nameOfWorks.Discription,
                                                                          @GroupjornalByPlan.ToList()[i].ToList()[y].nameOfWorks.Periodicity,
                                                      @GroupjornalByPlan.ToList()[i].ToList()[y].nameOfWorks.Unit)">
                            @GroupjornalByPlan.ToList()[i].ToList()[y].nameOfWorks.NameOfWork
                        </td>
                        <td title="@ShowValuesBySection(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray)">@Math.Round(GroupjornalByPlan.ToList()[i].ToList()[y].PlanArray.Sum(),3)</td>

                        @for (int n = 0; n < 12; n++)
                        {

                            <td align="center" class="table_value"><input class="w-100" style="text-align:center" onfocus='this.select()' asp-for="@Model.ToList()[el].PlanArray[n]" /></td>
                        }

                        <td align="center" class="table_value_note">
                            <textarea class="autoGrow w-100" style="text-align:center" oninput="auto_grow(this)" asp-for="@Model.ToList()[el].jornal.Note">@Model.ToList()[el].jornal.Note</textarea>
                        </td>
                            <input type="hidden" asp-for="@Model.ToList()[el].jornal.NumberRecordingID" />
                            <input type="hidden" asp-for="@Model.ToList()[el].nameOfWorks.IntegerValue" />
                    </tr>
                }


            }
        }

    </table>
    <datalist id="dictionarySector">
        @foreach (var item in ViewBag.DictionarySector)
        {
            <option>@item</option>
        }
    </datalist>

    <div class="modal fade" id="ModalDelete" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Внимание</h3>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">
                    <input type="submit" value="Удалить" class="btn-dark" asp-controller="Jornal" asp-action="DeleteRecordsFromJornal" asp-route-IsPlan="true"/>
                    <button type="button" data-bs-dismiss="modal">Отмена</button>
                </div>
            </div>
        </div>
    </div>

</form>

<script>
    function auto_grow(el) {
        el.style.height = "30px";
        el.style.height = (el.scrollHeight + 2) + "px";
    }

    let textarea = document.getElementsByClassName('autoGrow');
    for (let el of textarea) {
        el.style.height = "30px";
        el.style.height = (el.scrollHeight + 2) + "px";
    }

    function addToDictionary(elem) {
        let flag = false;
        let dictionarySector = document.getElementById('dictionarySector');
        let link = elem.nextElementSibling;

        let department = document.getElementById('Department');
        let selectedDepartment = department.options[department.selectedIndex].text;

        for (let i = 0; i < dictionarySector.options.length; i++) {
            if (dictionarySector.options[i].text == elem.value) { flag = true; }
        }

        if (flag == false && elem.value != '') {
            link.classList.remove('d-none');
            link.setAttribute("href", "../AdminDictionarySector/AddDictionarySectorByJornal?departmentDS=" + selectedDepartment + "&valueDS=" + elem.value);
        }
        else { link.classList.add('d-none'); }
    }

    let sectors = document.getElementsByClassName('sector');
    for (let el of sectors) {
        addToDictionary(el);
    }
</script>